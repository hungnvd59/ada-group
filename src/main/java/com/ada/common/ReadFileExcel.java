package com.ada.common;import org.apache.poi.hssf.usermodel.HSSFDateUtil;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.xssf.usermodel.XSSFCell;import org.apache.poi.xssf.usermodel.XSSFRow;import org.apache.poi.xssf.usermodel.XSSFSheet;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.springframework.stereotype.Service;import java.io.InputStream;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Iterator;import java.util.List;/** * @author HungNV */@Servicepublic class ReadFileExcel {    private static final SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yyyy h:mm a");    private static final String TYPE_STRING = "String";    private static final String TYPE_DATE = "Date";    private static final String TYPE_LONG = "Long";    private static final String TYPE_DOUBLE = "Double";    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");    private SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");    private Object getValueObj(Object strCellValue, String dataType) {        try {            if (strCellValue == null || String.valueOf(strCellValue).trim().equals("") || dataType == null && dataType.trim().equals("")) {                return null;            }            if (dataType.trim().equals(TYPE_STRING)) {                return ((String) strCellValue).trim();            } else if (dataType.trim().equals(TYPE_DATE)) {                return strCellValue;            } else if (dataType.trim().equals(TYPE_LONG)) {                if (strCellValue.getClass() == String.class) {                    return Long.valueOf((String) strCellValue);                } else if (strCellValue.getClass() == Double.class) {                    return ((Double) strCellValue).longValue();                }                return (Long) strCellValue;            } else if (dataType.trim().equals(TYPE_DOUBLE)) {                if (strCellValue.getClass() == String.class) {                    return (Double.valueOf(String.valueOf(strCellValue)));                }                return strCellValue;            } else {                return "";            }        } catch (Exception e) {            System.out.println(e.getMessage() + ":" + strCellValue);        }        return null;    }}